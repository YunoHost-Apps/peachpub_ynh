#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url="/"
is_public=$YNH_APP_ARG_IS_PUBLIC
password=$YNH_APP_ARG_PASSWORD

app=$YNH_APP_INSTANCE_NAME

architecture=$YNH_ARCH
peach_web_service=$app-peach-web
go_sbot_service=$app-go-sbot

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

# Check machine architecture
if [ $YNH_ARCH == "i386" ] || [ $YNH_ARCH == "armel" ]
then
	ynh_die --message="Sorry, but this app can only be installed on a x86, arm64 and armhf bits machine :("
fi

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=peach_web_service --value=$peach_web_service
ynh_app_setting_set --app=$app --key=go_sbot_service --value=$go_sbot_service

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Finding an available port..." --weight=1

# Find an available port
port=$(ynh_find_port --port=8095)
ynh_app_setting_set --app=$app --key=port --value=$port

# Find an available port for ssb connection
ssbport=$(ynh_find_port --port=8008)
ynh_app_setting_set --app=$app --key=ssbport --value=$ssbport

# Open the ssbport to the public
ynh_script_progression --message="Configuring firewall..."  --weight=1
ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $ssbport

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=1

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=1

# Create a system user
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path" --source_id=$YNH_ARCH

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE DATA DIRECTORY FOR PEACHCLOUD CONFIG AND GOSBOT DATA
#=================================================
ynh_script_progression --message="Creating a data directory..."  --weight=1

datadir=/home/yunohost.app/$app
ynh_app_setting_set --app=$app --key=datadir --value=$datadir

mkdir -p $datadir
mkdir -p $datadir/config
mkdir -p $datadir/.ssb-go

chmod 750 "$datadir"
chmod -R o-rwx "$datadir"
chown -R $app:www-data "$datadir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file for go-sbot" --weight=1

ynh_add_config --template="config.toml" --destination="$datadir/.ssb-go/config.toml"
chmod 600 "$datadir/.ssb-go/config.toml"
chown $app:$app "$datadir/.ssb-go/config.toml"

ynh_script_progression --message="Adding a configuration file for peach-web" --weight=1
ynh_add_config --template="peach.yml" --destination="$datadir/config/config.yml"
chmod 600 "$datadir/config/config.yml"
chown $app:$app "$datadir/config/config.yml"

mkdir -p /etc/sudoers.d/
ynh_add_config --template="sudoers" --destination="/etc/sudoers.d/$app"

#=================================================
# CONFIGURE ADMIN PASSWORD
#=================================================
ynh_script_progression --message="Configuring admin password" --weight=1

escaped_password=$(printf "%q" $password)
PEACH_CONFIG_PATH=$datadir/config/config.yml $final_path/peach-config changepassword -p $escaped_password

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..."  --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config --template="peach-web.service" --service="$peach_web_service"
ynh_add_systemd_config --template="go-sbot.service" --service="$go_sbot_service"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --weight=1

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

# touch logfile so it exists
touch /var/log/$app/$app.log

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost with ssbport $ssbport..." --weight=1

yunohost service add $go_sbot_service --description="$description" --log="/var/log/$app/$app.log"  --needs_exposed_ports $ssbport
yunohost service add $peach_web_service --description="$description" --log="/var/log/$app/$app.log"  --needs_exposed_ports $ssbport

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

# Start a systemd service
start_systemd_services $app

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..."  --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	# The "main" permission is automatically created before the install script.
	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
